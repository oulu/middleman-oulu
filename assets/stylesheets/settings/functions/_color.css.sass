@function color($value)
  @if type-of($value) == color
    @return true
  @else
    @return null

// Brightness math based on:
//   http://www.nbdtech.com/Blog/archive/2008/04/27/Calculating-the-Perceived-Brightness-of-a-Color.aspx

$red-magic-number: 241
$green-magic-number: 691
$blue-magic-number: 68
$brightness-divisor: $red-magic-number + $green-magic-number + $blue-magic-number

@function brightness_value($color)
  // Extract color components
  $red-component: red($color)
  $green-component: green($color)
  $blue-component: blue($color)
  // Calculate a brightness value in 3d color space between 0 and 255
  $number: sqrt(($red-component * $red-component * $red-magic-number + $green-component * $green-component * $green-magic-number + $blue-component * $blue-component * $blue-magic-number) / $brightness-divisor)
  // Convert to percentage and return
  @return 100% * $number / 255

@function contrasting_color($color, $light, $dark)
  @if brightness_value($color) < 65%
    @return $light
  @else
    @return $dark

// 使い方
//color: contrasting_color($bg-color, $light-text-color, $dark-text-color)
// $bg-colorが暗かったら$light-text-colorが選択される
// $bg-colorが明るかったらｍ暗かったら$light-text-colorが選択される

//@import brightness
//$dark-background-color: #333333
//$light-text-color: white
//$light-background-color: #eeeeee
//$dark-text-color: black

//.dark-background
  //background: $dark-background-color
  //color: contrasting_color($dark-background-color, $light-text-color, $dark-text-color)

//.light-background
  //background: $light-background-color
  //color: contrasting_color($light-background-color, $light-text-color, $dark-text-color)

// http://codepen.io/MadeByMike/pen/FoBjq

@function luma($color)
  // Adapted from: https://gist.github.com/voxpelli/6304812
  $rgba: red($color), green($color), blue($color)
  $rgba2: ()
  @for $i from 1 through 3
    $rgb: nth($rgba, $i)
    $rgb: $rgb / 255
    $rgb: if($rgb < 0.03928, $rgb / 12.92, pow(($rgb + 0.055) / 1.055, 2.4))
    $rgba2: append($rgba2, $rgb)
  @return (0.2126 * nth($rgba2, 1) + 0.7152 * nth($rgba2, 2) + 0.0722 * nth($rgba2, 3)) * 100

$ruma-threshold: 100 / pi()

@function luma_contrast($color-1, $color-2: null)
  @if $color-2
    @if abs(luma($color-1) - luma($color-2)) > $ruma-threshold
      @return true
    @else
      @return null
  @else
    @return if(luma($color-1) < 51, dark, bright)

@function luma_value($color-1, $color-2: null)
  @if $color-2
    @return abs(luma($color-1) - luma($color-2))
  @else
    @return luma($color-1)

@function luma_bright($color)
  @if luma($color) < 51
    @return null
  @else
    @return true

@function luma_dark($color)
  @if luma($color) < 51
    @return true
  @else
    @return null

@function luma_contrast_color($color)
  $bright-color: #ffffff !default
  $dark-color: #000000 !default
  @if luma_contrast($color) == bright
    @return $bright-color
  @else
    @return $dark-color

@function luma_add_contrast($background-color, $candidate-color)
  @if luma_contrast($background-color, $candidate-color)
    @return $candidate-color
  @else
    @if luma_dark($background-color)
      @return tint($candidate-color, reverse(percentage(luma_value($background-color, $candidate-color)*0.01))/1.618)
    @else
      @return shade($candidate-color, reverse(percentage(luma_value($background-color, $candidate-color)*0.01))/1.618)
